// Generated by Dagger (https://dagger.dev).
package com.example.modernandroidapp.ui.viewmodels;

import com.example.modernandroidapp.data.AuthRepository;
import com.example.modernandroidapp.data.UserSessionManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class LoginViewModel_Factory implements Factory<LoginViewModel> {
  private final Provider<AuthRepository> authRepositoryProvider;

  private final Provider<UserSessionManager> userSessionManagerProvider;

  public LoginViewModel_Factory(Provider<AuthRepository> authRepositoryProvider,
      Provider<UserSessionManager> userSessionManagerProvider) {
    this.authRepositoryProvider = authRepositoryProvider;
    this.userSessionManagerProvider = userSessionManagerProvider;
  }

  @Override
  public LoginViewModel get() {
    return newInstance(authRepositoryProvider.get(), userSessionManagerProvider.get());
  }

  public static LoginViewModel_Factory create(Provider<AuthRepository> authRepositoryProvider,
      Provider<UserSessionManager> userSessionManagerProvider) {
    return new LoginViewModel_Factory(authRepositoryProvider, userSessionManagerProvider);
  }

  public static LoginViewModel newInstance(AuthRepository authRepository,
      UserSessionManager userSessionManager) {
    return new LoginViewModel(authRepository, userSessionManager);
  }
}
